name: Publish Docker v2

on:
  workflow_dispatch:
  release:
    types: [ published ]
  push:
    branches:
      - 'main'
      - 'alltalkbeta'
    tags:
      - 'v*'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tts: [ xtts, vits, piper ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read variables
        run: |
          source ./docker/variables.sh
          for key in "${!ALLTALK_VARS[@]}"
          do
            echo "${key}=${ALLTALK_VARS[${key}]}"
            echo "${key}=${ALLTALK_VARS[${key}]}" >> $GITHUB_ENV
          done
          
          echo "*******************************************"
          echo "${{ github.ref }}"

      - name: Extract Docker Hub User and Repo Name
        run: |
          if [ -n "${{ vars.DOCKERHUB_USERNAME }}" ]; then
            echo "Using Github repository variable 'DOCKERHUB_USERNAME' as Docker hub username with value: '${{ vars.DOCKERHUB_USERNAME }}'"
            echo "DOCKERHUB_USERNAME=${{ vars.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          else
            echo "Using Github repository name as Docker hub username"
            echo "DOCKERHUB_USERNAME=$(echo ${{ github.repository }} | cut -d'/' -f 1)" >> $GITHUB_ENV
          fi
          
          if [ -n "${{ vars.DOCKERHUB_REPO_NAME }}" ]; then
            echo "Using Github repository variable 'DOCKERHUB_REPO_NAME' as Docker hub repo name with value: '${{ vars.DOCKERHUB_REPO_NAME }}'"
            echo "DOCKERHUB_REPO_NAME=${{ vars.DOCKERHUB_REPO_NAME }}" >> $GITHUB_ENV
          else
            echo "Using Github repository name as Docker hub repo name"
            echo "DOCKERHUB_REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f 2)" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}
          flavor: |
            suffix=-${{ matrix.tts }},onlatest=true
          tags: |
            # Use sematic versioning on push tag event:
            type=semver,pattern={{version}}
            # set latest tag for main and alltalkbeta branch:
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') || github.ref == format('refs/heads/{0}', 'alltalkbeta') }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            docker-base:
              - 'docker/variables.sh'
              - 'docker/base/Dockerfile'
            docker-workflow:
              - '.github/workflows/publish-docker-v2.yml'

      - name: Build and push base Docker image
        if: |
          steps.changes.outputs.docker-base == 'true' ||
          steps.changes.outputs.docker-workflow == 'true' ||
          github.event_name == 'release' ||
          (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))
        uses: docker/build-push-action@v6
        with:
          context: ./docker/base
          file: ./docker/base/Dockerfile
          platforms: "linux/amd64"
          push: true
          build-args: |
            CUDA_VERSION=${{ env.CUDA_VERSION }}
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}:buildcache,mode=max