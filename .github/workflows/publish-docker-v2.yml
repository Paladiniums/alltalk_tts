name: Publish Docker v2

on:
  workflow_dispatch:
  release:
    types: [ published ]
  push:
    branches:
      - 'main'
      - 'alltalkbeta'
    tags:
      - 'v*'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tts: [ xtts, vits, piper ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write dummy var
        run: echo "FOO=BAR" >> $GITHUB_ENV

      - name: Setup docker
        uses: ./.github/actions/docker-setup
        with:
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKERHUB_REPO_NAME: ${{ vars.DOCKERHUB_REPO_NAME }}

      - name: Check variables
        run: |
          echo "******************"
          echo "DOCKER_TAG=${{ env.DOCKER_TAG }}"
          echo "CUDA_VERSION=${{ env.CUDA_VERSION }}"
          echo "${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}
          flavor: |
            suffix=-${{ matrix.tts }},onlatest=true
          tags: |
            # Use sematic versioning on push tag event:
            type=semver,pattern={{version}}
            # set latest tag for main and alltalkbeta branch:
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') || github.ref == format('refs/heads/{0}', 'alltalkbeta') }}


      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            docker-base:
              - 'docker/variables.sh'
              - 'docker/base/Dockerfile'
            docker-workflow:
              - '.github/workflows/publish-docker-v2.yml'

      - name: Build and push base Docker image
        if: |
          steps.changes.outputs.docker-base == 'true' ||
          steps.changes.outputs.docker-workflow == 'true' ||
          github.event_name == 'release' ||
          (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))
        uses: docker/build-push-action@v6
        with:
          context: ./docker/base
          file: ./docker/base/Dockerfile
          platforms: "linux/amd64"
          push: true
          build-args: |
            CUDA_VERSION=${{ env.CUDA_VERSION }}
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}:buildcache,mode=max